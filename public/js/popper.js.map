{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./node_modules/popper.js/dist/popper.js","webpack:///(webpack)/buildin/global.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","__webpack_exports__","global","isBrowser","window","document","longerTimeoutBrowsers","timeoutDuration","length","navigator","userAgent","indexOf","debounce","Promise","fn","called","resolve","then","scheduled","setTimeout","isFunction","functionToCheck","toString","getStyleComputedProperty","element","nodeType","css","ownerDocument","defaultView","getComputedStyle","getParentNode","nodeName","parentNode","host","getScrollParent","body","overflow","overflowX","overflowY","test","isIE11","MSInputMethodContext","documentMode","isIE10","isIE","version","getOffsetParent","documentElement","noOffsetParent","offsetParent","nextElementSibling","getRoot","node","findCommonOffsetParent","element1","element2","order","compareDocumentPosition","Node","DOCUMENT_POSITION_FOLLOWING","start","end","range","createRange","setStart","setEnd","commonAncestorContainer","contains","firstElementChild","isOffsetContainer","element1root","getScroll","side","upperSide","html","scrollingElement","getBordersSize","styles","axis","sideA","sideB","parseFloat","getSize","computedStyle","Math","max","parseInt","getWindowSizes","height","width","_extends","assign","target","arguments","source","getClientRect","offsets","right","left","bottom","top","getBoundingClientRect","rect","scrollTop","scrollLeft","e","result","sizes","clientWidth","clientHeight","horizScrollbar","offsetWidth","vertScrollbar","offsetHeight","getOffsetRectRelativeToArbitraryNode","children","parent","fixedPosition","isHTML","childrenRect","parentRect","scrollParent","borderTopWidth","borderLeftWidth","marginTop","marginLeft","subtract","modifier","includeScroll","getFixedPositionOffsetParent","parentElement","el","getBoundaries","popper","reference","padding","boundariesElement","boundaries","excludeScroll","relativeOffset","innerWidth","innerHeight","getViewportOffsetRectRelativeToArtbitraryNode","boundariesNode","isFixed","isPaddingNumber","getArea","computeAutoPlacement","placement","refRect","rects","sortedAreas","keys","map","area","sort","a","b","filteredAreas","filter","computedPlacement","variation","split","getReferenceOffsets","state","getOuterSizes","x","marginBottom","y","marginRight","getOppositePlacement","hash","replace","matched","getPopperOffsets","referenceOffsets","popperRect","popperOffsets","isHoriz","mainSide","secondarySide","measurement","secondaryMeasurement","find","arr","check","Array","runModifiers","modifiers","data","ends","undefined","slice","prop","findIndex","cur","match","obj","forEach","console","warn","enabled","isModifierEnabled","modifierName","some","getSupportedPropertyName","prefixes","upperProp","charAt","toUpperCase","prefix","toCheck","style","getWindow","setupEventListeners","options","updateBound","addEventListener","passive","scrollElement","attachToScrollParents","event","callback","scrollParents","isBody","push","eventsEnabled","disableEventListeners","this","cancelAnimationFrame","scheduleUpdate","removeEventListener","isNumeric","isNaN","isFinite","setStyles","unit","isFirefox","isModifierRequired","requestingName","requestedName","requesting","isRequired","requested","placements","validPlacements","clockwise","counter","index","concat","reverse","BEHAVIORS","FLIP","CLOCKWISE","COUNTERCLOCKWISE","parseOffset","offset","basePlacement","useHeight","fragments","frag","trim","divider","search","splitRegex","ops","op","mergeWithPrevious","reduce","str","size","toValue","index2","Defaults","positionFixed","removeOnDestroy","onCreate","onUpdate","shift","shiftvariation","isVertical","shiftOffsets","[object Object]","preventOverflow","instance","transformProp","popperStyles","transform","priority","escapeWithReference","min","keepTogether","floor","opSide","arrow","arrowElement","querySelector","len","sideCapitalized","toLowerCase","altSide","arrowElementSize","center","popperMarginSide","popperBorderSide","sideValue","round","flip","flipped","originalPlacement","placementOpposite","flipOrder","behavior","step","refOffsets","overlapsRef","overflowsLeft","overflowsRight","overflowsTop","overflowsBottom","overflowsBoundaries","flippedVariationByRef","flipVariations","flippedVariationByContent","flipVariationsByContent","flippedVariation","getOppositeVariation","inner","subtractLength","hide","bound","attributes","computeStyle","legacyGpuAccelerationOption","gpuAcceleration","offsetParentRect","position","shouldRound","noRound","v","referenceWidth","popperWidth","isVariation","horizontalToInteger","verticalToInteger","getRoundedOffsets","devicePixelRatio","prefixedProperty","willChange","invertTop","invertLeft","x-placement","arrowStyles","applyStyle","setAttribute","removeAttribute","onLoad","modifierOptions","Popper","requestAnimationFrame","update","isDestroyed","isCreated","jquery","enableEventListeners","removeChild","Utils","PopperUtils","g","Function"],"mappings":"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","file":"/js/popper.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 190);\n","/**!\n * @fileOverview Kickass library to create and place poppers near their reference elements.\n * @version 1.15.0\n * @license\n * Copyright (c) 2016 Federico Zivolo and contributors\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\nvar isBrowser = typeof window !== 'undefined' && typeof document !== 'undefined';\n\nconst longerTimeoutBrowsers = ['Edge', 'Trident', 'Firefox'];\nlet timeoutDuration = 0;\nfor (let i = 0; i < longerTimeoutBrowsers.length; i += 1) {\n  if (isBrowser && navigator.userAgent.indexOf(longerTimeoutBrowsers[i]) >= 0) {\n    timeoutDuration = 1;\n    break;\n  }\n}\n\nfunction microtaskDebounce(fn) {\n  let called = false;\n  return () => {\n    if (called) {\n      return;\n    }\n    called = true;\n    window.Promise.resolve().then(() => {\n      called = false;\n      fn();\n    });\n  };\n}\n\nfunction taskDebounce(fn) {\n  let scheduled = false;\n  return () => {\n    if (!scheduled) {\n      scheduled = true;\n      setTimeout(() => {\n        scheduled = false;\n        fn();\n      }, timeoutDuration);\n    }\n  };\n}\n\nconst supportsMicroTasks = isBrowser && window.Promise;\n\n/**\n* Create a debounced version of a method, that's asynchronously deferred\n* but called in the minimum time possible.\n*\n* @method\n* @memberof Popper.Utils\n* @argument {Function} fn\n* @returns {Function}\n*/\nvar debounce = supportsMicroTasks ? microtaskDebounce : taskDebounce;\n\n/**\n * Check if the given variable is a function\n * @method\n * @memberof Popper.Utils\n * @argument {Any} functionToCheck - variable to check\n * @returns {Boolean} answer to: is a function?\n */\nfunction isFunction(functionToCheck) {\n  const getType = {};\n  return functionToCheck && getType.toString.call(functionToCheck) === '[object Function]';\n}\n\n/**\n * Get CSS computed property of the given element\n * @method\n * @memberof Popper.Utils\n * @argument {Eement} element\n * @argument {String} property\n */\nfunction getStyleComputedProperty(element, property) {\n  if (element.nodeType !== 1) {\n    return [];\n  }\n  // NOTE: 1 DOM access here\n  const window = element.ownerDocument.defaultView;\n  const css = window.getComputedStyle(element, null);\n  return property ? css[property] : css;\n}\n\n/**\n * Returns the parentNode or the host of the element\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @returns {Element} parent\n */\nfunction getParentNode(element) {\n  if (element.nodeName === 'HTML') {\n    return element;\n  }\n  return element.parentNode || element.host;\n}\n\n/**\n * Returns the scrolling parent of the given element\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @returns {Element} scroll parent\n */\nfunction getScrollParent(element) {\n  // Return body, `getScroll` will take care to get the correct `scrollTop` from it\n  if (!element) {\n    return document.body;\n  }\n\n  switch (element.nodeName) {\n    case 'HTML':\n    case 'BODY':\n      return element.ownerDocument.body;\n    case '#document':\n      return element.body;\n  }\n\n  // Firefox want us to check `-x` and `-y` variations as well\n  const { overflow, overflowX, overflowY } = getStyleComputedProperty(element);\n  if (/(auto|scroll|overlay)/.test(overflow + overflowY + overflowX)) {\n    return element;\n  }\n\n  return getScrollParent(getParentNode(element));\n}\n\nconst isIE11 = isBrowser && !!(window.MSInputMethodContext && document.documentMode);\nconst isIE10 = isBrowser && /MSIE 10/.test(navigator.userAgent);\n\n/**\n * Determines if the browser is Internet Explorer\n * @method\n * @memberof Popper.Utils\n * @param {Number} version to check\n * @returns {Boolean} isIE\n */\nfunction isIE(version) {\n  if (version === 11) {\n    return isIE11;\n  }\n  if (version === 10) {\n    return isIE10;\n  }\n  return isIE11 || isIE10;\n}\n\n/**\n * Returns the offset parent of the given element\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @returns {Element} offset parent\n */\nfunction getOffsetParent(element) {\n  if (!element) {\n    return document.documentElement;\n  }\n\n  const noOffsetParent = isIE(10) ? document.body : null;\n\n  // NOTE: 1 DOM access here\n  let offsetParent = element.offsetParent || null;\n  // Skip hidden elements which don't have an offsetParent\n  while (offsetParent === noOffsetParent && element.nextElementSibling) {\n    offsetParent = (element = element.nextElementSibling).offsetParent;\n  }\n\n  const nodeName = offsetParent && offsetParent.nodeName;\n\n  if (!nodeName || nodeName === 'BODY' || nodeName === 'HTML') {\n    return element ? element.ownerDocument.documentElement : document.documentElement;\n  }\n\n  // .offsetParent will return the closest TH, TD or TABLE in case\n  // no offsetParent is present, I hate this job...\n  if (['TH', 'TD', 'TABLE'].indexOf(offsetParent.nodeName) !== -1 && getStyleComputedProperty(offsetParent, 'position') === 'static') {\n    return getOffsetParent(offsetParent);\n  }\n\n  return offsetParent;\n}\n\nfunction isOffsetContainer(element) {\n  const { nodeName } = element;\n  if (nodeName === 'BODY') {\n    return false;\n  }\n  return nodeName === 'HTML' || getOffsetParent(element.firstElementChild) === element;\n}\n\n/**\n * Finds the root node (document, shadowDOM root) of the given element\n * @method\n * @memberof Popper.Utils\n * @argument {Element} node\n * @returns {Element} root node\n */\nfunction getRoot(node) {\n  if (node.parentNode !== null) {\n    return getRoot(node.parentNode);\n  }\n\n  return node;\n}\n\n/**\n * Finds the offset parent common to the two provided nodes\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element1\n * @argument {Element} element2\n * @returns {Element} common offset parent\n */\nfunction findCommonOffsetParent(element1, element2) {\n  // This check is needed to avoid errors in case one of the elements isn't defined for any reason\n  if (!element1 || !element1.nodeType || !element2 || !element2.nodeType) {\n    return document.documentElement;\n  }\n\n  // Here we make sure to give as \"start\" the element that comes first in the DOM\n  const order = element1.compareDocumentPosition(element2) & Node.DOCUMENT_POSITION_FOLLOWING;\n  const start = order ? element1 : element2;\n  const end = order ? element2 : element1;\n\n  // Get common ancestor container\n  const range = document.createRange();\n  range.setStart(start, 0);\n  range.setEnd(end, 0);\n  const { commonAncestorContainer } = range;\n\n  // Both nodes are inside #document\n  if (element1 !== commonAncestorContainer && element2 !== commonAncestorContainer || start.contains(end)) {\n    if (isOffsetContainer(commonAncestorContainer)) {\n      return commonAncestorContainer;\n    }\n\n    return getOffsetParent(commonAncestorContainer);\n  }\n\n  // one of the nodes is inside shadowDOM, find which one\n  const element1root = getRoot(element1);\n  if (element1root.host) {\n    return findCommonOffsetParent(element1root.host, element2);\n  } else {\n    return findCommonOffsetParent(element1, getRoot(element2).host);\n  }\n}\n\n/**\n * Gets the scroll value of the given element in the given side (top and left)\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @argument {String} side `top` or `left`\n * @returns {number} amount of scrolled pixels\n */\nfunction getScroll(element, side = 'top') {\n  const upperSide = side === 'top' ? 'scrollTop' : 'scrollLeft';\n  const nodeName = element.nodeName;\n\n  if (nodeName === 'BODY' || nodeName === 'HTML') {\n    const html = element.ownerDocument.documentElement;\n    const scrollingElement = element.ownerDocument.scrollingElement || html;\n    return scrollingElement[upperSide];\n  }\n\n  return element[upperSide];\n}\n\n/*\n * Sum or subtract the element scroll values (left and top) from a given rect object\n * @method\n * @memberof Popper.Utils\n * @param {Object} rect - Rect object you want to change\n * @param {HTMLElement} element - The element from the function reads the scroll values\n * @param {Boolean} subtract - set to true if you want to subtract the scroll values\n * @return {Object} rect - The modifier rect object\n */\nfunction includeScroll(rect, element, subtract = false) {\n  const scrollTop = getScroll(element, 'top');\n  const scrollLeft = getScroll(element, 'left');\n  const modifier = subtract ? -1 : 1;\n  rect.top += scrollTop * modifier;\n  rect.bottom += scrollTop * modifier;\n  rect.left += scrollLeft * modifier;\n  rect.right += scrollLeft * modifier;\n  return rect;\n}\n\n/*\n * Helper to detect borders of a given element\n * @method\n * @memberof Popper.Utils\n * @param {CSSStyleDeclaration} styles\n * Result of `getStyleComputedProperty` on the given element\n * @param {String} axis - `x` or `y`\n * @return {number} borders - The borders size of the given axis\n */\n\nfunction getBordersSize(styles, axis) {\n  const sideA = axis === 'x' ? 'Left' : 'Top';\n  const sideB = sideA === 'Left' ? 'Right' : 'Bottom';\n\n  return parseFloat(styles[`border${sideA}Width`], 10) + parseFloat(styles[`border${sideB}Width`], 10);\n}\n\nfunction getSize(axis, body, html, computedStyle) {\n  return Math.max(body[`offset${axis}`], body[`scroll${axis}`], html[`client${axis}`], html[`offset${axis}`], html[`scroll${axis}`], isIE(10) ? parseInt(html[`offset${axis}`]) + parseInt(computedStyle[`margin${axis === 'Height' ? 'Top' : 'Left'}`]) + parseInt(computedStyle[`margin${axis === 'Height' ? 'Bottom' : 'Right'}`]) : 0);\n}\n\nfunction getWindowSizes(document) {\n  const body = document.body;\n  const html = document.documentElement;\n  const computedStyle = isIE(10) && getComputedStyle(html);\n\n  return {\n    height: getSize('Height', body, html, computedStyle),\n    width: getSize('Width', body, html, computedStyle)\n  };\n}\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\n/**\n * Given element offsets, generate an output similar to getBoundingClientRect\n * @method\n * @memberof Popper.Utils\n * @argument {Object} offsets\n * @returns {Object} ClientRect like output\n */\nfunction getClientRect(offsets) {\n  return _extends({}, offsets, {\n    right: offsets.left + offsets.width,\n    bottom: offsets.top + offsets.height\n  });\n}\n\n/**\n * Get bounding client rect of given element\n * @method\n * @memberof Popper.Utils\n * @param {HTMLElement} element\n * @return {Object} client rect\n */\nfunction getBoundingClientRect(element) {\n  let rect = {};\n\n  // IE10 10 FIX: Please, don't ask, the element isn't\n  // considered in DOM in some circumstances...\n  // This isn't reproducible in IE10 compatibility mode of IE11\n  try {\n    if (isIE(10)) {\n      rect = element.getBoundingClientRect();\n      const scrollTop = getScroll(element, 'top');\n      const scrollLeft = getScroll(element, 'left');\n      rect.top += scrollTop;\n      rect.left += scrollLeft;\n      rect.bottom += scrollTop;\n      rect.right += scrollLeft;\n    } else {\n      rect = element.getBoundingClientRect();\n    }\n  } catch (e) {}\n\n  const result = {\n    left: rect.left,\n    top: rect.top,\n    width: rect.right - rect.left,\n    height: rect.bottom - rect.top\n  };\n\n  // subtract scrollbar size from sizes\n  const sizes = element.nodeName === 'HTML' ? getWindowSizes(element.ownerDocument) : {};\n  const width = sizes.width || element.clientWidth || result.right - result.left;\n  const height = sizes.height || element.clientHeight || result.bottom - result.top;\n\n  let horizScrollbar = element.offsetWidth - width;\n  let vertScrollbar = element.offsetHeight - height;\n\n  // if an hypothetical scrollbar is detected, we must be sure it's not a `border`\n  // we make this check conditional for performance reasons\n  if (horizScrollbar || vertScrollbar) {\n    const styles = getStyleComputedProperty(element);\n    horizScrollbar -= getBordersSize(styles, 'x');\n    vertScrollbar -= getBordersSize(styles, 'y');\n\n    result.width -= horizScrollbar;\n    result.height -= vertScrollbar;\n  }\n\n  return getClientRect(result);\n}\n\nfunction getOffsetRectRelativeToArbitraryNode(children, parent, fixedPosition = false) {\n  const isIE10 = isIE(10);\n  const isHTML = parent.nodeName === 'HTML';\n  const childrenRect = getBoundingClientRect(children);\n  const parentRect = getBoundingClientRect(parent);\n  const scrollParent = getScrollParent(children);\n\n  const styles = getStyleComputedProperty(parent);\n  const borderTopWidth = parseFloat(styles.borderTopWidth, 10);\n  const borderLeftWidth = parseFloat(styles.borderLeftWidth, 10);\n\n  // In cases where the parent is fixed, we must ignore negative scroll in offset calc\n  if (fixedPosition && isHTML) {\n    parentRect.top = Math.max(parentRect.top, 0);\n    parentRect.left = Math.max(parentRect.left, 0);\n  }\n  let offsets = getClientRect({\n    top: childrenRect.top - parentRect.top - borderTopWidth,\n    left: childrenRect.left - parentRect.left - borderLeftWidth,\n    width: childrenRect.width,\n    height: childrenRect.height\n  });\n  offsets.marginTop = 0;\n  offsets.marginLeft = 0;\n\n  // Subtract margins of documentElement in case it's being used as parent\n  // we do this only on HTML because it's the only element that behaves\n  // differently when margins are applied to it. The margins are included in\n  // the box of the documentElement, in the other cases not.\n  if (!isIE10 && isHTML) {\n    const marginTop = parseFloat(styles.marginTop, 10);\n    const marginLeft = parseFloat(styles.marginLeft, 10);\n\n    offsets.top -= borderTopWidth - marginTop;\n    offsets.bottom -= borderTopWidth - marginTop;\n    offsets.left -= borderLeftWidth - marginLeft;\n    offsets.right -= borderLeftWidth - marginLeft;\n\n    // Attach marginTop and marginLeft because in some circumstances we may need them\n    offsets.marginTop = marginTop;\n    offsets.marginLeft = marginLeft;\n  }\n\n  if (isIE10 && !fixedPosition ? parent.contains(scrollParent) : parent === scrollParent && scrollParent.nodeName !== 'BODY') {\n    offsets = includeScroll(offsets, parent);\n  }\n\n  return offsets;\n}\n\nfunction getViewportOffsetRectRelativeToArtbitraryNode(element, excludeScroll = false) {\n  const html = element.ownerDocument.documentElement;\n  const relativeOffset = getOffsetRectRelativeToArbitraryNode(element, html);\n  const width = Math.max(html.clientWidth, window.innerWidth || 0);\n  const height = Math.max(html.clientHeight, window.innerHeight || 0);\n\n  const scrollTop = !excludeScroll ? getScroll(html) : 0;\n  const scrollLeft = !excludeScroll ? getScroll(html, 'left') : 0;\n\n  const offset = {\n    top: scrollTop - relativeOffset.top + relativeOffset.marginTop,\n    left: scrollLeft - relativeOffset.left + relativeOffset.marginLeft,\n    width,\n    height\n  };\n\n  return getClientRect(offset);\n}\n\n/**\n * Check if the given element is fixed or is inside a fixed parent\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @argument {Element} customContainer\n * @returns {Boolean} answer to \"isFixed?\"\n */\nfunction isFixed(element) {\n  const nodeName = element.nodeName;\n  if (nodeName === 'BODY' || nodeName === 'HTML') {\n    return false;\n  }\n  if (getStyleComputedProperty(element, 'position') === 'fixed') {\n    return true;\n  }\n  const parentNode = getParentNode(element);\n  if (!parentNode) {\n    return false;\n  }\n  return isFixed(parentNode);\n}\n\n/**\n * Finds the first parent of an element that has a transformed property defined\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @returns {Element} first transformed parent or documentElement\n */\n\nfunction getFixedPositionOffsetParent(element) {\n  // This check is needed to avoid errors in case one of the elements isn't defined for any reason\n  if (!element || !element.parentElement || isIE()) {\n    return document.documentElement;\n  }\n  let el = element.parentElement;\n  while (el && getStyleComputedProperty(el, 'transform') === 'none') {\n    el = el.parentElement;\n  }\n  return el || document.documentElement;\n}\n\n/**\n * Computed the boundaries limits and return them\n * @method\n * @memberof Popper.Utils\n * @param {HTMLElement} popper\n * @param {HTMLElement} reference\n * @param {number} padding\n * @param {HTMLElement} boundariesElement - Element used to define the boundaries\n * @param {Boolean} fixedPosition - Is in fixed position mode\n * @returns {Object} Coordinates of the boundaries\n */\nfunction getBoundaries(popper, reference, padding, boundariesElement, fixedPosition = false) {\n  // NOTE: 1 DOM access here\n\n  let boundaries = { top: 0, left: 0 };\n  const offsetParent = fixedPosition ? getFixedPositionOffsetParent(popper) : findCommonOffsetParent(popper, reference);\n\n  // Handle viewport case\n  if (boundariesElement === 'viewport') {\n    boundaries = getViewportOffsetRectRelativeToArtbitraryNode(offsetParent, fixedPosition);\n  } else {\n    // Handle other cases based on DOM element used as boundaries\n    let boundariesNode;\n    if (boundariesElement === 'scrollParent') {\n      boundariesNode = getScrollParent(getParentNode(reference));\n      if (boundariesNode.nodeName === 'BODY') {\n        boundariesNode = popper.ownerDocument.documentElement;\n      }\n    } else if (boundariesElement === 'window') {\n      boundariesNode = popper.ownerDocument.documentElement;\n    } else {\n      boundariesNode = boundariesElement;\n    }\n\n    const offsets = getOffsetRectRelativeToArbitraryNode(boundariesNode, offsetParent, fixedPosition);\n\n    // In case of HTML, we need a different computation\n    if (boundariesNode.nodeName === 'HTML' && !isFixed(offsetParent)) {\n      const { height, width } = getWindowSizes(popper.ownerDocument);\n      boundaries.top += offsets.top - offsets.marginTop;\n      boundaries.bottom = height + offsets.top;\n      boundaries.left += offsets.left - offsets.marginLeft;\n      boundaries.right = width + offsets.left;\n    } else {\n      // for all the other DOM elements, this one is good\n      boundaries = offsets;\n    }\n  }\n\n  // Add paddings\n  padding = padding || 0;\n  const isPaddingNumber = typeof padding === 'number';\n  boundaries.left += isPaddingNumber ? padding : padding.left || 0;\n  boundaries.top += isPaddingNumber ? padding : padding.top || 0;\n  boundaries.right -= isPaddingNumber ? padding : padding.right || 0;\n  boundaries.bottom -= isPaddingNumber ? padding : padding.bottom || 0;\n\n  return boundaries;\n}\n\nfunction getArea({ width, height }) {\n  return width * height;\n}\n\n/**\n * Utility used to transform the `auto` placement to the placement with more\n * available space.\n * @method\n * @memberof Popper.Utils\n * @argument {Object} data - The data object generated by update method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nfunction computeAutoPlacement(placement, refRect, popper, reference, boundariesElement, padding = 0) {\n  if (placement.indexOf('auto') === -1) {\n    return placement;\n  }\n\n  const boundaries = getBoundaries(popper, reference, padding, boundariesElement);\n\n  const rects = {\n    top: {\n      width: boundaries.width,\n      height: refRect.top - boundaries.top\n    },\n    right: {\n      width: boundaries.right - refRect.right,\n      height: boundaries.height\n    },\n    bottom: {\n      width: boundaries.width,\n      height: boundaries.bottom - refRect.bottom\n    },\n    left: {\n      width: refRect.left - boundaries.left,\n      height: boundaries.height\n    }\n  };\n\n  const sortedAreas = Object.keys(rects).map(key => _extends({\n    key\n  }, rects[key], {\n    area: getArea(rects[key])\n  })).sort((a, b) => b.area - a.area);\n\n  const filteredAreas = sortedAreas.filter(({ width, height }) => width >= popper.clientWidth && height >= popper.clientHeight);\n\n  const computedPlacement = filteredAreas.length > 0 ? filteredAreas[0].key : sortedAreas[0].key;\n\n  const variation = placement.split('-')[1];\n\n  return computedPlacement + (variation ? `-${variation}` : '');\n}\n\n/**\n * Get offsets to the reference element\n * @method\n * @memberof Popper.Utils\n * @param {Object} state\n * @param {Element} popper - the popper element\n * @param {Element} reference - the reference element (the popper will be relative to this)\n * @param {Element} fixedPosition - is in fixed position mode\n * @returns {Object} An object containing the offsets which will be applied to the popper\n */\nfunction getReferenceOffsets(state, popper, reference, fixedPosition = null) {\n  const commonOffsetParent = fixedPosition ? getFixedPositionOffsetParent(popper) : findCommonOffsetParent(popper, reference);\n  return getOffsetRectRelativeToArbitraryNode(reference, commonOffsetParent, fixedPosition);\n}\n\n/**\n * Get the outer sizes of the given element (offset size + margins)\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @returns {Object} object containing width and height properties\n */\nfunction getOuterSizes(element) {\n  const window = element.ownerDocument.defaultView;\n  const styles = window.getComputedStyle(element);\n  const x = parseFloat(styles.marginTop || 0) + parseFloat(styles.marginBottom || 0);\n  const y = parseFloat(styles.marginLeft || 0) + parseFloat(styles.marginRight || 0);\n  const result = {\n    width: element.offsetWidth + y,\n    height: element.offsetHeight + x\n  };\n  return result;\n}\n\n/**\n * Get the opposite placement of the given one\n * @method\n * @memberof Popper.Utils\n * @argument {String} placement\n * @returns {String} flipped placement\n */\nfunction getOppositePlacement(placement) {\n  const hash = { left: 'right', right: 'left', bottom: 'top', top: 'bottom' };\n  return placement.replace(/left|right|bottom|top/g, matched => hash[matched]);\n}\n\n/**\n * Get offsets to the popper\n * @method\n * @memberof Popper.Utils\n * @param {Object} position - CSS position the Popper will get applied\n * @param {HTMLElement} popper - the popper element\n * @param {Object} referenceOffsets - the reference offsets (the popper will be relative to this)\n * @param {String} placement - one of the valid placement options\n * @returns {Object} popperOffsets - An object containing the offsets which will be applied to the popper\n */\nfunction getPopperOffsets(popper, referenceOffsets, placement) {\n  placement = placement.split('-')[0];\n\n  // Get popper node sizes\n  const popperRect = getOuterSizes(popper);\n\n  // Add position, width and height to our offsets object\n  const popperOffsets = {\n    width: popperRect.width,\n    height: popperRect.height\n  };\n\n  // depending by the popper placement we have to compute its offsets slightly differently\n  const isHoriz = ['right', 'left'].indexOf(placement) !== -1;\n  const mainSide = isHoriz ? 'top' : 'left';\n  const secondarySide = isHoriz ? 'left' : 'top';\n  const measurement = isHoriz ? 'height' : 'width';\n  const secondaryMeasurement = !isHoriz ? 'height' : 'width';\n\n  popperOffsets[mainSide] = referenceOffsets[mainSide] + referenceOffsets[measurement] / 2 - popperRect[measurement] / 2;\n  if (placement === secondarySide) {\n    popperOffsets[secondarySide] = referenceOffsets[secondarySide] - popperRect[secondaryMeasurement];\n  } else {\n    popperOffsets[secondarySide] = referenceOffsets[getOppositePlacement(secondarySide)];\n  }\n\n  return popperOffsets;\n}\n\n/**\n * Mimics the `find` method of Array\n * @method\n * @memberof Popper.Utils\n * @argument {Array} arr\n * @argument prop\n * @argument value\n * @returns index or -1\n */\nfunction find(arr, check) {\n  // use native find if supported\n  if (Array.prototype.find) {\n    return arr.find(check);\n  }\n\n  // use `filter` to obtain the same behavior of `find`\n  return arr.filter(check)[0];\n}\n\n/**\n * Return the index of the matching object\n * @method\n * @memberof Popper.Utils\n * @argument {Array} arr\n * @argument prop\n * @argument value\n * @returns index or -1\n */\nfunction findIndex(arr, prop, value) {\n  // use native findIndex if supported\n  if (Array.prototype.findIndex) {\n    return arr.findIndex(cur => cur[prop] === value);\n  }\n\n  // use `find` + `indexOf` if `findIndex` isn't supported\n  const match = find(arr, obj => obj[prop] === value);\n  return arr.indexOf(match);\n}\n\n/**\n * Loop trough the list of modifiers and run them in order,\n * each of them will then edit the data object.\n * @method\n * @memberof Popper.Utils\n * @param {dataObject} data\n * @param {Array} modifiers\n * @param {String} ends - Optional modifier name used as stopper\n * @returns {dataObject}\n */\nfunction runModifiers(modifiers, data, ends) {\n  const modifiersToRun = ends === undefined ? modifiers : modifiers.slice(0, findIndex(modifiers, 'name', ends));\n\n  modifiersToRun.forEach(modifier => {\n    if (modifier['function']) {\n      // eslint-disable-line dot-notation\n      console.warn('`modifier.function` is deprecated, use `modifier.fn`!');\n    }\n    const fn = modifier['function'] || modifier.fn; // eslint-disable-line dot-notation\n    if (modifier.enabled && isFunction(fn)) {\n      // Add properties to offsets to make them a complete clientRect object\n      // we do this before each modifier to make sure the previous one doesn't\n      // mess with these values\n      data.offsets.popper = getClientRect(data.offsets.popper);\n      data.offsets.reference = getClientRect(data.offsets.reference);\n\n      data = fn(data, modifier);\n    }\n  });\n\n  return data;\n}\n\n/**\n * Updates the position of the popper, computing the new offsets and applying\n * the new style.<br />\n * Prefer `scheduleUpdate` over `update` because of performance reasons.\n * @method\n * @memberof Popper\n */\nfunction update() {\n  // if popper is destroyed, don't perform any further update\n  if (this.state.isDestroyed) {\n    return;\n  }\n\n  let data = {\n    instance: this,\n    styles: {},\n    arrowStyles: {},\n    attributes: {},\n    flipped: false,\n    offsets: {}\n  };\n\n  // compute reference element offsets\n  data.offsets.reference = getReferenceOffsets(this.state, this.popper, this.reference, this.options.positionFixed);\n\n  // compute auto placement, store placement inside the data object,\n  // modifiers will be able to edit `placement` if needed\n  // and refer to originalPlacement to know the original value\n  data.placement = computeAutoPlacement(this.options.placement, data.offsets.reference, this.popper, this.reference, this.options.modifiers.flip.boundariesElement, this.options.modifiers.flip.padding);\n\n  // store the computed placement inside `originalPlacement`\n  data.originalPlacement = data.placement;\n\n  data.positionFixed = this.options.positionFixed;\n\n  // compute the popper offsets\n  data.offsets.popper = getPopperOffsets(this.popper, data.offsets.reference, data.placement);\n\n  data.offsets.popper.position = this.options.positionFixed ? 'fixed' : 'absolute';\n\n  // run the modifiers\n  data = runModifiers(this.modifiers, data);\n\n  // the first `update` will call `onCreate` callback\n  // the other ones will call `onUpdate` callback\n  if (!this.state.isCreated) {\n    this.state.isCreated = true;\n    this.options.onCreate(data);\n  } else {\n    this.options.onUpdate(data);\n  }\n}\n\n/**\n * Helper used to know if the given modifier is enabled.\n * @method\n * @memberof Popper.Utils\n * @returns {Boolean}\n */\nfunction isModifierEnabled(modifiers, modifierName) {\n  return modifiers.some(({ name, enabled }) => enabled && name === modifierName);\n}\n\n/**\n * Get the prefixed supported property name\n * @method\n * @memberof Popper.Utils\n * @argument {String} property (camelCase)\n * @returns {String} prefixed property (camelCase or PascalCase, depending on the vendor prefix)\n */\nfunction getSupportedPropertyName(property) {\n  const prefixes = [false, 'ms', 'Webkit', 'Moz', 'O'];\n  const upperProp = property.charAt(0).toUpperCase() + property.slice(1);\n\n  for (let i = 0; i < prefixes.length; i++) {\n    const prefix = prefixes[i];\n    const toCheck = prefix ? `${prefix}${upperProp}` : property;\n    if (typeof document.body.style[toCheck] !== 'undefined') {\n      return toCheck;\n    }\n  }\n  return null;\n}\n\n/**\n * Destroys the popper.\n * @method\n * @memberof Popper\n */\nfunction destroy() {\n  this.state.isDestroyed = true;\n\n  // touch DOM only if `applyStyle` modifier is enabled\n  if (isModifierEnabled(this.modifiers, 'applyStyle')) {\n    this.popper.removeAttribute('x-placement');\n    this.popper.style.position = '';\n    this.popper.style.top = '';\n    this.popper.style.left = '';\n    this.popper.style.right = '';\n    this.popper.style.bottom = '';\n    this.popper.style.willChange = '';\n    this.popper.style[getSupportedPropertyName('transform')] = '';\n  }\n\n  this.disableEventListeners();\n\n  // remove the popper if user explicity asked for the deletion on destroy\n  // do not use `remove` because IE11 doesn't support it\n  if (this.options.removeOnDestroy) {\n    this.popper.parentNode.removeChild(this.popper);\n  }\n  return this;\n}\n\n/**\n * Get the window associated with the element\n * @argument {Element} element\n * @returns {Window}\n */\nfunction getWindow(element) {\n  const ownerDocument = element.ownerDocument;\n  return ownerDocument ? ownerDocument.defaultView : window;\n}\n\nfunction attachToScrollParents(scrollParent, event, callback, scrollParents) {\n  const isBody = scrollParent.nodeName === 'BODY';\n  const target = isBody ? scrollParent.ownerDocument.defaultView : scrollParent;\n  target.addEventListener(event, callback, { passive: true });\n\n  if (!isBody) {\n    attachToScrollParents(getScrollParent(target.parentNode), event, callback, scrollParents);\n  }\n  scrollParents.push(target);\n}\n\n/**\n * Setup needed event listeners used to update the popper position\n * @method\n * @memberof Popper.Utils\n * @private\n */\nfunction setupEventListeners(reference, options, state, updateBound) {\n  // Resize event listener on window\n  state.updateBound = updateBound;\n  getWindow(reference).addEventListener('resize', state.updateBound, { passive: true });\n\n  // Scroll event listener on scroll parents\n  const scrollElement = getScrollParent(reference);\n  attachToScrollParents(scrollElement, 'scroll', state.updateBound, state.scrollParents);\n  state.scrollElement = scrollElement;\n  state.eventsEnabled = true;\n\n  return state;\n}\n\n/**\n * It will add resize/scroll events and start recalculating\n * position of the popper element when they are triggered.\n * @method\n * @memberof Popper\n */\nfunction enableEventListeners() {\n  if (!this.state.eventsEnabled) {\n    this.state = setupEventListeners(this.reference, this.options, this.state, this.scheduleUpdate);\n  }\n}\n\n/**\n * Remove event listeners used to update the popper position\n * @method\n * @memberof Popper.Utils\n * @private\n */\nfunction removeEventListeners(reference, state) {\n  // Remove resize event listener on window\n  getWindow(reference).removeEventListener('resize', state.updateBound);\n\n  // Remove scroll event listener on scroll parents\n  state.scrollParents.forEach(target => {\n    target.removeEventListener('scroll', state.updateBound);\n  });\n\n  // Reset state\n  state.updateBound = null;\n  state.scrollParents = [];\n  state.scrollElement = null;\n  state.eventsEnabled = false;\n  return state;\n}\n\n/**\n * It will remove resize/scroll events and won't recalculate popper position\n * when they are triggered. It also won't trigger `onUpdate` callback anymore,\n * unless you call `update` method manually.\n * @method\n * @memberof Popper\n */\nfunction disableEventListeners() {\n  if (this.state.eventsEnabled) {\n    cancelAnimationFrame(this.scheduleUpdate);\n    this.state = removeEventListeners(this.reference, this.state);\n  }\n}\n\n/**\n * Tells if a given input is a number\n * @method\n * @memberof Popper.Utils\n * @param {*} input to check\n * @return {Boolean}\n */\nfunction isNumeric(n) {\n  return n !== '' && !isNaN(parseFloat(n)) && isFinite(n);\n}\n\n/**\n * Set the style to the given popper\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element - Element to apply the style to\n * @argument {Object} styles\n * Object with a list of properties and values which will be applied to the element\n */\nfunction setStyles(element, styles) {\n  Object.keys(styles).forEach(prop => {\n    let unit = '';\n    // add unit if the value is numeric and is one of the following\n    if (['width', 'height', 'top', 'right', 'bottom', 'left'].indexOf(prop) !== -1 && isNumeric(styles[prop])) {\n      unit = 'px';\n    }\n    element.style[prop] = styles[prop] + unit;\n  });\n}\n\n/**\n * Set the attributes to the given popper\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element - Element to apply the attributes to\n * @argument {Object} styles\n * Object with a list of properties and values which will be applied to the element\n */\nfunction setAttributes(element, attributes) {\n  Object.keys(attributes).forEach(function (prop) {\n    const value = attributes[prop];\n    if (value !== false) {\n      element.setAttribute(prop, attributes[prop]);\n    } else {\n      element.removeAttribute(prop);\n    }\n  });\n}\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by `update` method\n * @argument {Object} data.styles - List of style properties - values to apply to popper element\n * @argument {Object} data.attributes - List of attribute properties - values to apply to popper element\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The same data object\n */\nfunction applyStyle(data) {\n  // any property present in `data.styles` will be applied to the popper,\n  // in this way we can make the 3rd party modifiers add custom styles to it\n  // Be aware, modifiers could override the properties defined in the previous\n  // lines of this modifier!\n  setStyles(data.instance.popper, data.styles);\n\n  // any property present in `data.attributes` will be applied to the popper,\n  // they will be set as HTML attributes of the element\n  setAttributes(data.instance.popper, data.attributes);\n\n  // if arrowElement is defined and arrowStyles has some properties\n  if (data.arrowElement && Object.keys(data.arrowStyles).length) {\n    setStyles(data.arrowElement, data.arrowStyles);\n  }\n\n  return data;\n}\n\n/**\n * Set the x-placement attribute before everything else because it could be used\n * to add margins to the popper margins needs to be calculated to get the\n * correct popper offsets.\n * @method\n * @memberof Popper.modifiers\n * @param {HTMLElement} reference - The reference element used to position the popper\n * @param {HTMLElement} popper - The HTML element used as popper\n * @param {Object} options - Popper.js options\n */\nfunction applyStyleOnLoad(reference, popper, options, modifierOptions, state) {\n  // compute reference element offsets\n  const referenceOffsets = getReferenceOffsets(state, popper, reference, options.positionFixed);\n\n  // compute auto placement, store placement inside the data object,\n  // modifiers will be able to edit `placement` if needed\n  // and refer to originalPlacement to know the original value\n  const placement = computeAutoPlacement(options.placement, referenceOffsets, popper, reference, options.modifiers.flip.boundariesElement, options.modifiers.flip.padding);\n\n  popper.setAttribute('x-placement', placement);\n\n  // Apply `position` to popper before anything else because\n  // without the position applied we can't guarantee correct computations\n  setStyles(popper, { position: options.positionFixed ? 'fixed' : 'absolute' });\n\n  return options;\n}\n\n/**\n * @function\n * @memberof Popper.Utils\n * @argument {Object} data - The data object generated by `update` method\n * @argument {Boolean} shouldRound - If the offsets should be rounded at all\n * @returns {Object} The popper's position offsets rounded\n *\n * The tale of pixel-perfect positioning. It's still not 100% perfect, but as\n * good as it can be within reason.\n * Discussion here: https://github.com/FezVrasta/popper.js/pull/715\n *\n * Low DPI screens cause a popper to be blurry if not using full pixels (Safari\n * as well on High DPI screens).\n *\n * Firefox prefers no rounding for positioning and does not have blurriness on\n * high DPI screens.\n *\n * Only horizontal placement and left/right values need to be considered.\n */\nfunction getRoundedOffsets(data, shouldRound) {\n  const { popper, reference } = data.offsets;\n  const { round, floor } = Math;\n  const noRound = v => v;\n\n  const referenceWidth = round(reference.width);\n  const popperWidth = round(popper.width);\n\n  const isVertical = ['left', 'right'].indexOf(data.placement) !== -1;\n  const isVariation = data.placement.indexOf('-') !== -1;\n  const sameWidthParity = referenceWidth % 2 === popperWidth % 2;\n  const bothOddWidth = referenceWidth % 2 === 1 && popperWidth % 2 === 1;\n\n  const horizontalToInteger = !shouldRound ? noRound : isVertical || isVariation || sameWidthParity ? round : floor;\n  const verticalToInteger = !shouldRound ? noRound : round;\n\n  return {\n    left: horizontalToInteger(bothOddWidth && !isVariation && shouldRound ? popper.left - 1 : popper.left),\n    top: verticalToInteger(popper.top),\n    bottom: verticalToInteger(popper.bottom),\n    right: horizontalToInteger(popper.right)\n  };\n}\n\nconst isFirefox = isBrowser && /Firefox/i.test(navigator.userAgent);\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by `update` method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nfunction computeStyle(data, options) {\n  const { x, y } = options;\n  const { popper } = data.offsets;\n\n  // Remove this legacy support in Popper.js v2\n  const legacyGpuAccelerationOption = find(data.instance.modifiers, modifier => modifier.name === 'applyStyle').gpuAcceleration;\n  if (legacyGpuAccelerationOption !== undefined) {\n    console.warn('WARNING: `gpuAcceleration` option moved to `computeStyle` modifier and will not be supported in future versions of Popper.js!');\n  }\n  const gpuAcceleration = legacyGpuAccelerationOption !== undefined ? legacyGpuAccelerationOption : options.gpuAcceleration;\n\n  const offsetParent = getOffsetParent(data.instance.popper);\n  const offsetParentRect = getBoundingClientRect(offsetParent);\n\n  // Styles\n  const styles = {\n    position: popper.position\n  };\n\n  const offsets = getRoundedOffsets(data, window.devicePixelRatio < 2 || !isFirefox);\n\n  const sideA = x === 'bottom' ? 'top' : 'bottom';\n  const sideB = y === 'right' ? 'left' : 'right';\n\n  // if gpuAcceleration is set to `true` and transform is supported,\n  //  we use `translate3d` to apply the position to the popper we\n  // automatically use the supported prefixed version if needed\n  const prefixedProperty = getSupportedPropertyName('transform');\n\n  // now, let's make a step back and look at this code closely (wtf?)\n  // If the content of the popper grows once it's been positioned, it\n  // may happen that the popper gets misplaced because of the new content\n  // overflowing its reference element\n  // To avoid this problem, we provide two options (x and y), which allow\n  // the consumer to define the offset origin.\n  // If we position a popper on top of a reference element, we can set\n  // `x` to `top` to make the popper grow towards its top instead of\n  // its bottom.\n  let left, top;\n  if (sideA === 'bottom') {\n    // when offsetParent is <html> the positioning is relative to the bottom of the screen (excluding the scrollbar)\n    // and not the bottom of the html element\n    if (offsetParent.nodeName === 'HTML') {\n      top = -offsetParent.clientHeight + offsets.bottom;\n    } else {\n      top = -offsetParentRect.height + offsets.bottom;\n    }\n  } else {\n    top = offsets.top;\n  }\n  if (sideB === 'right') {\n    if (offsetParent.nodeName === 'HTML') {\n      left = -offsetParent.clientWidth + offsets.right;\n    } else {\n      left = -offsetParentRect.width + offsets.right;\n    }\n  } else {\n    left = offsets.left;\n  }\n  if (gpuAcceleration && prefixedProperty) {\n    styles[prefixedProperty] = `translate3d(${left}px, ${top}px, 0)`;\n    styles[sideA] = 0;\n    styles[sideB] = 0;\n    styles.willChange = 'transform';\n  } else {\n    // othwerise, we use the standard `top`, `left`, `bottom` and `right` properties\n    const invertTop = sideA === 'bottom' ? -1 : 1;\n    const invertLeft = sideB === 'right' ? -1 : 1;\n    styles[sideA] = top * invertTop;\n    styles[sideB] = left * invertLeft;\n    styles.willChange = `${sideA}, ${sideB}`;\n  }\n\n  // Attributes\n  const attributes = {\n    'x-placement': data.placement\n  };\n\n  // Update `data` attributes, styles and arrowStyles\n  data.attributes = _extends({}, attributes, data.attributes);\n  data.styles = _extends({}, styles, data.styles);\n  data.arrowStyles = _extends({}, data.offsets.arrow, data.arrowStyles);\n\n  return data;\n}\n\n/**\n * Helper used to know if the given modifier depends from another one.<br />\n * It checks if the needed modifier is listed and enabled.\n * @method\n * @memberof Popper.Utils\n * @param {Array} modifiers - list of modifiers\n * @param {String} requestingName - name of requesting modifier\n * @param {String} requestedName - name of requested modifier\n * @returns {Boolean}\n */\nfunction isModifierRequired(modifiers, requestingName, requestedName) {\n  const requesting = find(modifiers, ({ name }) => name === requestingName);\n\n  const isRequired = !!requesting && modifiers.some(modifier => {\n    return modifier.name === requestedName && modifier.enabled && modifier.order < requesting.order;\n  });\n\n  if (!isRequired) {\n    const requesting = `\\`${requestingName}\\``;\n    const requested = `\\`${requestedName}\\``;\n    console.warn(`${requested} modifier is required by ${requesting} modifier in order to work, be sure to include it before ${requesting}!`);\n  }\n  return isRequired;\n}\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by update method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nfunction arrow(data, options) {\n  // arrow depends on keepTogether in order to work\n  if (!isModifierRequired(data.instance.modifiers, 'arrow', 'keepTogether')) {\n    return data;\n  }\n\n  let arrowElement = options.element;\n\n  // if arrowElement is a string, suppose it's a CSS selector\n  if (typeof arrowElement === 'string') {\n    arrowElement = data.instance.popper.querySelector(arrowElement);\n\n    // if arrowElement is not found, don't run the modifier\n    if (!arrowElement) {\n      return data;\n    }\n  } else {\n    // if the arrowElement isn't a query selector we must check that the\n    // provided DOM node is child of its popper node\n    if (!data.instance.popper.contains(arrowElement)) {\n      console.warn('WARNING: `arrow.element` must be child of its popper element!');\n      return data;\n    }\n  }\n\n  const placement = data.placement.split('-')[0];\n  const { popper, reference } = data.offsets;\n  const isVertical = ['left', 'right'].indexOf(placement) !== -1;\n\n  const len = isVertical ? 'height' : 'width';\n  const sideCapitalized = isVertical ? 'Top' : 'Left';\n  const side = sideCapitalized.toLowerCase();\n  const altSide = isVertical ? 'left' : 'top';\n  const opSide = isVertical ? 'bottom' : 'right';\n  const arrowElementSize = getOuterSizes(arrowElement)[len];\n\n  //\n  // extends keepTogether behavior making sure the popper and its\n  // reference have enough pixels in conjunction\n  //\n\n  // top/left side\n  if (reference[opSide] - arrowElementSize < popper[side]) {\n    data.offsets.popper[side] -= popper[side] - (reference[opSide] - arrowElementSize);\n  }\n  // bottom/right side\n  if (reference[side] + arrowElementSize > popper[opSide]) {\n    data.offsets.popper[side] += reference[side] + arrowElementSize - popper[opSide];\n  }\n  data.offsets.popper = getClientRect(data.offsets.popper);\n\n  // compute center of the popper\n  const center = reference[side] + reference[len] / 2 - arrowElementSize / 2;\n\n  // Compute the sideValue using the updated popper offsets\n  // take popper margin in account because we don't have this info available\n  const css = getStyleComputedProperty(data.instance.popper);\n  const popperMarginSide = parseFloat(css[`margin${sideCapitalized}`], 10);\n  const popperBorderSide = parseFloat(css[`border${sideCapitalized}Width`], 10);\n  let sideValue = center - data.offsets.popper[side] - popperMarginSide - popperBorderSide;\n\n  // prevent arrowElement from being placed not contiguously to its popper\n  sideValue = Math.max(Math.min(popper[len] - arrowElementSize, sideValue), 0);\n\n  data.arrowElement = arrowElement;\n  data.offsets.arrow = {\n    [side]: Math.round(sideValue),\n    [altSide]: '' // make sure to unset any eventual altSide value from the DOM node\n  };\n\n  return data;\n}\n\n/**\n * Get the opposite placement variation of the given one\n * @method\n * @memberof Popper.Utils\n * @argument {String} placement variation\n * @returns {String} flipped placement variation\n */\nfunction getOppositeVariation(variation) {\n  if (variation === 'end') {\n    return 'start';\n  } else if (variation === 'start') {\n    return 'end';\n  }\n  return variation;\n}\n\n/**\n * List of accepted placements to use as values of the `placement` option.<br />\n * Valid placements are:\n * - `auto`\n * - `top`\n * - `right`\n * - `bottom`\n * - `left`\n *\n * Each placement can have a variation from this list:\n * - `-start`\n * - `-end`\n *\n * Variations are interpreted easily if you think of them as the left to right\n * written languages. Horizontally (`top` and `bottom`), `start` is left and `end`\n * is right.<br />\n * Vertically (`left` and `right`), `start` is top and `end` is bottom.\n *\n * Some valid examples are:\n * - `top-end` (on top of reference, right aligned)\n * - `right-start` (on right of reference, top aligned)\n * - `bottom` (on bottom, centered)\n * - `auto-end` (on the side with more space available, alignment depends by placement)\n *\n * @static\n * @type {Array}\n * @enum {String}\n * @readonly\n * @method placements\n * @memberof Popper\n */\nvar placements = ['auto-start', 'auto', 'auto-end', 'top-start', 'top', 'top-end', 'right-start', 'right', 'right-end', 'bottom-end', 'bottom', 'bottom-start', 'left-end', 'left', 'left-start'];\n\n// Get rid of `auto` `auto-start` and `auto-end`\nconst validPlacements = placements.slice(3);\n\n/**\n * Given an initial placement, returns all the subsequent placements\n * clockwise (or counter-clockwise).\n *\n * @method\n * @memberof Popper.Utils\n * @argument {String} placement - A valid placement (it accepts variations)\n * @argument {Boolean} counter - Set to true to walk the placements counterclockwise\n * @returns {Array} placements including their variations\n */\nfunction clockwise(placement, counter = false) {\n  const index = validPlacements.indexOf(placement);\n  const arr = validPlacements.slice(index + 1).concat(validPlacements.slice(0, index));\n  return counter ? arr.reverse() : arr;\n}\n\nconst BEHAVIORS = {\n  FLIP: 'flip',\n  CLOCKWISE: 'clockwise',\n  COUNTERCLOCKWISE: 'counterclockwise'\n};\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by update method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nfunction flip(data, options) {\n  // if `inner` modifier is enabled, we can't use the `flip` modifier\n  if (isModifierEnabled(data.instance.modifiers, 'inner')) {\n    return data;\n  }\n\n  if (data.flipped && data.placement === data.originalPlacement) {\n    // seems like flip is trying to loop, probably there's not enough space on any of the flippable sides\n    return data;\n  }\n\n  const boundaries = getBoundaries(data.instance.popper, data.instance.reference, options.padding, options.boundariesElement, data.positionFixed);\n\n  let placement = data.placement.split('-')[0];\n  let placementOpposite = getOppositePlacement(placement);\n  let variation = data.placement.split('-')[1] || '';\n\n  let flipOrder = [];\n\n  switch (options.behavior) {\n    case BEHAVIORS.FLIP:\n      flipOrder = [placement, placementOpposite];\n      break;\n    case BEHAVIORS.CLOCKWISE:\n      flipOrder = clockwise(placement);\n      break;\n    case BEHAVIORS.COUNTERCLOCKWISE:\n      flipOrder = clockwise(placement, true);\n      break;\n    default:\n      flipOrder = options.behavior;\n  }\n\n  flipOrder.forEach((step, index) => {\n    if (placement !== step || flipOrder.length === index + 1) {\n      return data;\n    }\n\n    placement = data.placement.split('-')[0];\n    placementOpposite = getOppositePlacement(placement);\n\n    const popperOffsets = data.offsets.popper;\n    const refOffsets = data.offsets.reference;\n\n    // using floor because the reference offsets may contain decimals we are not going to consider here\n    const floor = Math.floor;\n    const overlapsRef = placement === 'left' && floor(popperOffsets.right) > floor(refOffsets.left) || placement === 'right' && floor(popperOffsets.left) < floor(refOffsets.right) || placement === 'top' && floor(popperOffsets.bottom) > floor(refOffsets.top) || placement === 'bottom' && floor(popperOffsets.top) < floor(refOffsets.bottom);\n\n    const overflowsLeft = floor(popperOffsets.left) < floor(boundaries.left);\n    const overflowsRight = floor(popperOffsets.right) > floor(boundaries.right);\n    const overflowsTop = floor(popperOffsets.top) < floor(boundaries.top);\n    const overflowsBottom = floor(popperOffsets.bottom) > floor(boundaries.bottom);\n\n    const overflowsBoundaries = placement === 'left' && overflowsLeft || placement === 'right' && overflowsRight || placement === 'top' && overflowsTop || placement === 'bottom' && overflowsBottom;\n\n    // flip the variation if required\n    const isVertical = ['top', 'bottom'].indexOf(placement) !== -1;\n\n    // flips variation if reference element overflows boundaries\n    const flippedVariationByRef = !!options.flipVariations && (isVertical && variation === 'start' && overflowsLeft || isVertical && variation === 'end' && overflowsRight || !isVertical && variation === 'start' && overflowsTop || !isVertical && variation === 'end' && overflowsBottom);\n\n    // flips variation if popper content overflows boundaries\n    const flippedVariationByContent = !!options.flipVariationsByContent && (isVertical && variation === 'start' && overflowsRight || isVertical && variation === 'end' && overflowsLeft || !isVertical && variation === 'start' && overflowsBottom || !isVertical && variation === 'end' && overflowsTop);\n\n    const flippedVariation = flippedVariationByRef || flippedVariationByContent;\n\n    if (overlapsRef || overflowsBoundaries || flippedVariation) {\n      // this boolean to detect any flip loop\n      data.flipped = true;\n\n      if (overlapsRef || overflowsBoundaries) {\n        placement = flipOrder[index + 1];\n      }\n\n      if (flippedVariation) {\n        variation = getOppositeVariation(variation);\n      }\n\n      data.placement = placement + (variation ? '-' + variation : '');\n\n      // this object contains `position`, we want to preserve it along with\n      // any additional property we may add in the future\n      data.offsets.popper = _extends({}, data.offsets.popper, getPopperOffsets(data.instance.popper, data.offsets.reference, data.placement));\n\n      data = runModifiers(data.instance.modifiers, data, 'flip');\n    }\n  });\n  return data;\n}\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by update method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nfunction keepTogether(data) {\n  const { popper, reference } = data.offsets;\n  const placement = data.placement.split('-')[0];\n  const floor = Math.floor;\n  const isVertical = ['top', 'bottom'].indexOf(placement) !== -1;\n  const side = isVertical ? 'right' : 'bottom';\n  const opSide = isVertical ? 'left' : 'top';\n  const measurement = isVertical ? 'width' : 'height';\n\n  if (popper[side] < floor(reference[opSide])) {\n    data.offsets.popper[opSide] = floor(reference[opSide]) - popper[measurement];\n  }\n  if (popper[opSide] > floor(reference[side])) {\n    data.offsets.popper[opSide] = floor(reference[side]);\n  }\n\n  return data;\n}\n\n/**\n * Converts a string containing value + unit into a px value number\n * @function\n * @memberof {modifiers~offset}\n * @private\n * @argument {String} str - Value + unit string\n * @argument {String} measurement - `height` or `width`\n * @argument {Object} popperOffsets\n * @argument {Object} referenceOffsets\n * @returns {Number|String}\n * Value in pixels, or original string if no values were extracted\n */\nfunction toValue(str, measurement, popperOffsets, referenceOffsets) {\n  // separate value from unit\n  const split = str.match(/((?:\\-|\\+)?\\d*\\.?\\d*)(.*)/);\n  const value = +split[1];\n  const unit = split[2];\n\n  // If it's not a number it's an operator, I guess\n  if (!value) {\n    return str;\n  }\n\n  if (unit.indexOf('%') === 0) {\n    let element;\n    switch (unit) {\n      case '%p':\n        element = popperOffsets;\n        break;\n      case '%':\n      case '%r':\n      default:\n        element = referenceOffsets;\n    }\n\n    const rect = getClientRect(element);\n    return rect[measurement] / 100 * value;\n  } else if (unit === 'vh' || unit === 'vw') {\n    // if is a vh or vw, we calculate the size based on the viewport\n    let size;\n    if (unit === 'vh') {\n      size = Math.max(document.documentElement.clientHeight, window.innerHeight || 0);\n    } else {\n      size = Math.max(document.documentElement.clientWidth, window.innerWidth || 0);\n    }\n    return size / 100 * value;\n  } else {\n    // if is an explicit pixel unit, we get rid of the unit and keep the value\n    // if is an implicit unit, it's px, and we return just the value\n    return value;\n  }\n}\n\n/**\n * Parse an `offset` string to extrapolate `x` and `y` numeric offsets.\n * @function\n * @memberof {modifiers~offset}\n * @private\n * @argument {String} offset\n * @argument {Object} popperOffsets\n * @argument {Object} referenceOffsets\n * @argument {String} basePlacement\n * @returns {Array} a two cells array with x and y offsets in numbers\n */\nfunction parseOffset(offset, popperOffsets, referenceOffsets, basePlacement) {\n  const offsets = [0, 0];\n\n  // Use height if placement is left or right and index is 0 otherwise use width\n  // in this way the first offset will use an axis and the second one\n  // will use the other one\n  const useHeight = ['right', 'left'].indexOf(basePlacement) !== -1;\n\n  // Split the offset string to obtain a list of values and operands\n  // The regex addresses values with the plus or minus sign in front (+10, -20, etc)\n  const fragments = offset.split(/(\\+|\\-)/).map(frag => frag.trim());\n\n  // Detect if the offset string contains a pair of values or a single one\n  // they could be separated by comma or space\n  const divider = fragments.indexOf(find(fragments, frag => frag.search(/,|\\s/) !== -1));\n\n  if (fragments[divider] && fragments[divider].indexOf(',') === -1) {\n    console.warn('Offsets separated by white space(s) are deprecated, use a comma (,) instead.');\n  }\n\n  // If divider is found, we divide the list of values and operands to divide\n  // them by ofset X and Y.\n  const splitRegex = /\\s*,\\s*|\\s+/;\n  let ops = divider !== -1 ? [fragments.slice(0, divider).concat([fragments[divider].split(splitRegex)[0]]), [fragments[divider].split(splitRegex)[1]].concat(fragments.slice(divider + 1))] : [fragments];\n\n  // Convert the values with units to absolute pixels to allow our computations\n  ops = ops.map((op, index) => {\n    // Most of the units rely on the orientation of the popper\n    const measurement = (index === 1 ? !useHeight : useHeight) ? 'height' : 'width';\n    let mergeWithPrevious = false;\n    return op\n    // This aggregates any `+` or `-` sign that aren't considered operators\n    // e.g.: 10 + +5 => [10, +, +5]\n    .reduce((a, b) => {\n      if (a[a.length - 1] === '' && ['+', '-'].indexOf(b) !== -1) {\n        a[a.length - 1] = b;\n        mergeWithPrevious = true;\n        return a;\n      } else if (mergeWithPrevious) {\n        a[a.length - 1] += b;\n        mergeWithPrevious = false;\n        return a;\n      } else {\n        return a.concat(b);\n      }\n    }, [])\n    // Here we convert the string values into number values (in px)\n    .map(str => toValue(str, measurement, popperOffsets, referenceOffsets));\n  });\n\n  // Loop trough the offsets arrays and execute the operations\n  ops.forEach((op, index) => {\n    op.forEach((frag, index2) => {\n      if (isNumeric(frag)) {\n        offsets[index] += frag * (op[index2 - 1] === '-' ? -1 : 1);\n      }\n    });\n  });\n  return offsets;\n}\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by update method\n * @argument {Object} options - Modifiers configuration and options\n * @argument {Number|String} options.offset=0\n * The offset value as described in the modifier description\n * @returns {Object} The data object, properly modified\n */\nfunction offset(data, { offset }) {\n  const { placement, offsets: { popper, reference } } = data;\n  const basePlacement = placement.split('-')[0];\n\n  let offsets;\n  if (isNumeric(+offset)) {\n    offsets = [+offset, 0];\n  } else {\n    offsets = parseOffset(offset, popper, reference, basePlacement);\n  }\n\n  if (basePlacement === 'left') {\n    popper.top += offsets[0];\n    popper.left -= offsets[1];\n  } else if (basePlacement === 'right') {\n    popper.top += offsets[0];\n    popper.left += offsets[1];\n  } else if (basePlacement === 'top') {\n    popper.left += offsets[0];\n    popper.top -= offsets[1];\n  } else if (basePlacement === 'bottom') {\n    popper.left += offsets[0];\n    popper.top += offsets[1];\n  }\n\n  data.popper = popper;\n  return data;\n}\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by `update` method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nfunction preventOverflow(data, options) {\n  let boundariesElement = options.boundariesElement || getOffsetParent(data.instance.popper);\n\n  // If offsetParent is the reference element, we really want to\n  // go one step up and use the next offsetParent as reference to\n  // avoid to make this modifier completely useless and look like broken\n  if (data.instance.reference === boundariesElement) {\n    boundariesElement = getOffsetParent(boundariesElement);\n  }\n\n  // NOTE: DOM access here\n  // resets the popper's position so that the document size can be calculated excluding\n  // the size of the popper element itself\n  const transformProp = getSupportedPropertyName('transform');\n  const popperStyles = data.instance.popper.style; // assignment to help minification\n  const { top, left, [transformProp]: transform } = popperStyles;\n  popperStyles.top = '';\n  popperStyles.left = '';\n  popperStyles[transformProp] = '';\n\n  const boundaries = getBoundaries(data.instance.popper, data.instance.reference, options.padding, boundariesElement, data.positionFixed);\n\n  // NOTE: DOM access here\n  // restores the original style properties after the offsets have been computed\n  popperStyles.top = top;\n  popperStyles.left = left;\n  popperStyles[transformProp] = transform;\n\n  options.boundaries = boundaries;\n\n  const order = options.priority;\n  let popper = data.offsets.popper;\n\n  const check = {\n    primary(placement) {\n      let value = popper[placement];\n      if (popper[placement] < boundaries[placement] && !options.escapeWithReference) {\n        value = Math.max(popper[placement], boundaries[placement]);\n      }\n      return { [placement]: value };\n    },\n    secondary(placement) {\n      const mainSide = placement === 'right' ? 'left' : 'top';\n      let value = popper[mainSide];\n      if (popper[placement] > boundaries[placement] && !options.escapeWithReference) {\n        value = Math.min(popper[mainSide], boundaries[placement] - (placement === 'right' ? popper.width : popper.height));\n      }\n      return { [mainSide]: value };\n    }\n  };\n\n  order.forEach(placement => {\n    const side = ['left', 'top'].indexOf(placement) !== -1 ? 'primary' : 'secondary';\n    popper = _extends({}, popper, check[side](placement));\n  });\n\n  data.offsets.popper = popper;\n\n  return data;\n}\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by `update` method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nfunction shift(data) {\n  const placement = data.placement;\n  const basePlacement = placement.split('-')[0];\n  const shiftvariation = placement.split('-')[1];\n\n  // if shift shiftvariation is specified, run the modifier\n  if (shiftvariation) {\n    const { reference, popper } = data.offsets;\n    const isVertical = ['bottom', 'top'].indexOf(basePlacement) !== -1;\n    const side = isVertical ? 'left' : 'top';\n    const measurement = isVertical ? 'width' : 'height';\n\n    const shiftOffsets = {\n      start: { [side]: reference[side] },\n      end: {\n        [side]: reference[side] + reference[measurement] - popper[measurement]\n      }\n    };\n\n    data.offsets.popper = _extends({}, popper, shiftOffsets[shiftvariation]);\n  }\n\n  return data;\n}\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by update method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nfunction hide(data) {\n  if (!isModifierRequired(data.instance.modifiers, 'hide', 'preventOverflow')) {\n    return data;\n  }\n\n  const refRect = data.offsets.reference;\n  const bound = find(data.instance.modifiers, modifier => modifier.name === 'preventOverflow').boundaries;\n\n  if (refRect.bottom < bound.top || refRect.left > bound.right || refRect.top > bound.bottom || refRect.right < bound.left) {\n    // Avoid unnecessary DOM access if visibility hasn't changed\n    if (data.hide === true) {\n      return data;\n    }\n\n    data.hide = true;\n    data.attributes['x-out-of-boundaries'] = '';\n  } else {\n    // Avoid unnecessary DOM access if visibility hasn't changed\n    if (data.hide === false) {\n      return data;\n    }\n\n    data.hide = false;\n    data.attributes['x-out-of-boundaries'] = false;\n  }\n\n  return data;\n}\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by `update` method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nfunction inner(data) {\n  const placement = data.placement;\n  const basePlacement = placement.split('-')[0];\n  const { popper, reference } = data.offsets;\n  const isHoriz = ['left', 'right'].indexOf(basePlacement) !== -1;\n\n  const subtractLength = ['top', 'left'].indexOf(basePlacement) === -1;\n\n  popper[isHoriz ? 'left' : 'top'] = reference[basePlacement] - (subtractLength ? popper[isHoriz ? 'width' : 'height'] : 0);\n\n  data.placement = getOppositePlacement(placement);\n  data.offsets.popper = getClientRect(popper);\n\n  return data;\n}\n\n/**\n * Modifier function, each modifier can have a function of this type assigned\n * to its `fn` property.<br />\n * These functions will be called on each update, this means that you must\n * make sure they are performant enough to avoid performance bottlenecks.\n *\n * @function ModifierFn\n * @argument {dataObject} data - The data object generated by `update` method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {dataObject} The data object, properly modified\n */\n\n/**\n * Modifiers are plugins used to alter the behavior of your poppers.<br />\n * Popper.js uses a set of 9 modifiers to provide all the basic functionalities\n * needed by the library.\n *\n * Usually you don't want to override the `order`, `fn` and `onLoad` props.\n * All the other properties are configurations that could be tweaked.\n * @namespace modifiers\n */\nvar modifiers = {\n  /**\n   * Modifier used to shift the popper on the start or end of its reference\n   * element.<br />\n   * It will read the variation of the `placement` property.<br />\n   * It can be one either `-end` or `-start`.\n   * @memberof modifiers\n   * @inner\n   */\n  shift: {\n    /** @prop {number} order=100 - Index used to define the order of execution */\n    order: 100,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: shift\n  },\n\n  /**\n   * The `offset` modifier can shift your popper on both its axis.\n   *\n   * It accepts the following units:\n   * - `px` or unit-less, interpreted as pixels\n   * - `%` or `%r`, percentage relative to the length of the reference element\n   * - `%p`, percentage relative to the length of the popper element\n   * - `vw`, CSS viewport width unit\n   * - `vh`, CSS viewport height unit\n   *\n   * For length is intended the main axis relative to the placement of the popper.<br />\n   * This means that if the placement is `top` or `bottom`, the length will be the\n   * `width`. In case of `left` or `right`, it will be the `height`.\n   *\n   * You can provide a single value (as `Number` or `String`), or a pair of values\n   * as `String` divided by a comma or one (or more) white spaces.<br />\n   * The latter is a deprecated method because it leads to confusion and will be\n   * removed in v2.<br />\n   * Additionally, it accepts additions and subtractions between different units.\n   * Note that multiplications and divisions aren't supported.\n   *\n   * Valid examples are:\n   * ```\n   * 10\n   * '10%'\n   * '10, 10'\n   * '10%, 10'\n   * '10 + 10%'\n   * '10 - 5vh + 3%'\n   * '-10px + 5vh, 5px - 6%'\n   * ```\n   * > **NB**: If you desire to apply offsets to your poppers in a way that may make them overlap\n   * > with their reference element, unfortunately, you will have to disable the `flip` modifier.\n   * > You can read more on this at this [issue](https://github.com/FezVrasta/popper.js/issues/373).\n   *\n   * @memberof modifiers\n   * @inner\n   */\n  offset: {\n    /** @prop {number} order=200 - Index used to define the order of execution */\n    order: 200,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: offset,\n    /** @prop {Number|String} offset=0\n     * The offset value as described in the modifier description\n     */\n    offset: 0\n  },\n\n  /**\n   * Modifier used to prevent the popper from being positioned outside the boundary.\n   *\n   * A scenario exists where the reference itself is not within the boundaries.<br />\n   * We can say it has \"escaped the boundaries\" — or just \"escaped\".<br />\n   * In this case we need to decide whether the popper should either:\n   *\n   * - detach from the reference and remain \"trapped\" in the boundaries, or\n   * - if it should ignore the boundary and \"escape with its reference\"\n   *\n   * When `escapeWithReference` is set to`true` and reference is completely\n   * outside its boundaries, the popper will overflow (or completely leave)\n   * the boundaries in order to remain attached to the edge of the reference.\n   *\n   * @memberof modifiers\n   * @inner\n   */\n  preventOverflow: {\n    /** @prop {number} order=300 - Index used to define the order of execution */\n    order: 300,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: preventOverflow,\n    /**\n     * @prop {Array} [priority=['left','right','top','bottom']]\n     * Popper will try to prevent overflow following these priorities by default,\n     * then, it could overflow on the left and on top of the `boundariesElement`\n     */\n    priority: ['left', 'right', 'top', 'bottom'],\n    /**\n     * @prop {number} padding=5\n     * Amount of pixel used to define a minimum distance between the boundaries\n     * and the popper. This makes sure the popper always has a little padding\n     * between the edges of its container\n     */\n    padding: 5,\n    /**\n     * @prop {String|HTMLElement} boundariesElement='scrollParent'\n     * Boundaries used by the modifier. Can be `scrollParent`, `window`,\n     * `viewport` or any DOM element.\n     */\n    boundariesElement: 'scrollParent'\n  },\n\n  /**\n   * Modifier used to make sure the reference and its popper stay near each other\n   * without leaving any gap between the two. Especially useful when the arrow is\n   * enabled and you want to ensure that it points to its reference element.\n   * It cares only about the first axis. You can still have poppers with margin\n   * between the popper and its reference element.\n   * @memberof modifiers\n   * @inner\n   */\n  keepTogether: {\n    /** @prop {number} order=400 - Index used to define the order of execution */\n    order: 400,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: keepTogether\n  },\n\n  /**\n   * This modifier is used to move the `arrowElement` of the popper to make\n   * sure it is positioned between the reference element and its popper element.\n   * It will read the outer size of the `arrowElement` node to detect how many\n   * pixels of conjunction are needed.\n   *\n   * It has no effect if no `arrowElement` is provided.\n   * @memberof modifiers\n   * @inner\n   */\n  arrow: {\n    /** @prop {number} order=500 - Index used to define the order of execution */\n    order: 500,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: arrow,\n    /** @prop {String|HTMLElement} element='[x-arrow]' - Selector or node used as arrow */\n    element: '[x-arrow]'\n  },\n\n  /**\n   * Modifier used to flip the popper's placement when it starts to overlap its\n   * reference element.\n   *\n   * Requires the `preventOverflow` modifier before it in order to work.\n   *\n   * **NOTE:** this modifier will interrupt the current update cycle and will\n   * restart it if it detects the need to flip the placement.\n   * @memberof modifiers\n   * @inner\n   */\n  flip: {\n    /** @prop {number} order=600 - Index used to define the order of execution */\n    order: 600,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: flip,\n    /**\n     * @prop {String|Array} behavior='flip'\n     * The behavior used to change the popper's placement. It can be one of\n     * `flip`, `clockwise`, `counterclockwise` or an array with a list of valid\n     * placements (with optional variations)\n     */\n    behavior: 'flip',\n    /**\n     * @prop {number} padding=5\n     * The popper will flip if it hits the edges of the `boundariesElement`\n     */\n    padding: 5,\n    /**\n     * @prop {String|HTMLElement} boundariesElement='viewport'\n     * The element which will define the boundaries of the popper position.\n     * The popper will never be placed outside of the defined boundaries\n     * (except if `keepTogether` is enabled)\n     */\n    boundariesElement: 'viewport',\n    /**\n     * @prop {Boolean} flipVariations=false\n     * The popper will switch placement variation between `-start` and `-end` when\n     * the reference element overlaps its boundaries.\n     *\n     * The original placement should have a set variation.\n     */\n    flipVariations: false,\n    /**\n     * @prop {Boolean} flipVariationsByContent=false\n     * The popper will switch placement variation between `-start` and `-end` when\n     * the popper element overlaps its reference boundaries.\n     *\n     * The original placement should have a set variation.\n     */\n    flipVariationsByContent: false\n  },\n\n  /**\n   * Modifier used to make the popper flow toward the inner of the reference element.\n   * By default, when this modifier is disabled, the popper will be placed outside\n   * the reference element.\n   * @memberof modifiers\n   * @inner\n   */\n  inner: {\n    /** @prop {number} order=700 - Index used to define the order of execution */\n    order: 700,\n    /** @prop {Boolean} enabled=false - Whether the modifier is enabled or not */\n    enabled: false,\n    /** @prop {ModifierFn} */\n    fn: inner\n  },\n\n  /**\n   * Modifier used to hide the popper when its reference element is outside of the\n   * popper boundaries. It will set a `x-out-of-boundaries` attribute which can\n   * be used to hide with a CSS selector the popper when its reference is\n   * out of boundaries.\n   *\n   * Requires the `preventOverflow` modifier before it in order to work.\n   * @memberof modifiers\n   * @inner\n   */\n  hide: {\n    /** @prop {number} order=800 - Index used to define the order of execution */\n    order: 800,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: hide\n  },\n\n  /**\n   * Computes the style that will be applied to the popper element to gets\n   * properly positioned.\n   *\n   * Note that this modifier will not touch the DOM, it just prepares the styles\n   * so that `applyStyle` modifier can apply it. This separation is useful\n   * in case you need to replace `applyStyle` with a custom implementation.\n   *\n   * This modifier has `850` as `order` value to maintain backward compatibility\n   * with previous versions of Popper.js. Expect the modifiers ordering method\n   * to change in future major versions of the library.\n   *\n   * @memberof modifiers\n   * @inner\n   */\n  computeStyle: {\n    /** @prop {number} order=850 - Index used to define the order of execution */\n    order: 850,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: computeStyle,\n    /**\n     * @prop {Boolean} gpuAcceleration=true\n     * If true, it uses the CSS 3D transformation to position the popper.\n     * Otherwise, it will use the `top` and `left` properties\n     */\n    gpuAcceleration: true,\n    /**\n     * @prop {string} [x='bottom']\n     * Where to anchor the X axis (`bottom` or `top`). AKA X offset origin.\n     * Change this if your popper should grow in a direction different from `bottom`\n     */\n    x: 'bottom',\n    /**\n     * @prop {string} [x='left']\n     * Where to anchor the Y axis (`left` or `right`). AKA Y offset origin.\n     * Change this if your popper should grow in a direction different from `right`\n     */\n    y: 'right'\n  },\n\n  /**\n   * Applies the computed styles to the popper element.\n   *\n   * All the DOM manipulations are limited to this modifier. This is useful in case\n   * you want to integrate Popper.js inside a framework or view library and you\n   * want to delegate all the DOM manipulations to it.\n   *\n   * Note that if you disable this modifier, you must make sure the popper element\n   * has its position set to `absolute` before Popper.js can do its work!\n   *\n   * Just disable this modifier and define your own to achieve the desired effect.\n   *\n   * @memberof modifiers\n   * @inner\n   */\n  applyStyle: {\n    /** @prop {number} order=900 - Index used to define the order of execution */\n    order: 900,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: applyStyle,\n    /** @prop {Function} */\n    onLoad: applyStyleOnLoad,\n    /**\n     * @deprecated since version 1.10.0, the property moved to `computeStyle` modifier\n     * @prop {Boolean} gpuAcceleration=true\n     * If true, it uses the CSS 3D transformation to position the popper.\n     * Otherwise, it will use the `top` and `left` properties\n     */\n    gpuAcceleration: undefined\n  }\n};\n\n/**\n * The `dataObject` is an object containing all the information used by Popper.js.\n * This object is passed to modifiers and to the `onCreate` and `onUpdate` callbacks.\n * @name dataObject\n * @property {Object} data.instance The Popper.js instance\n * @property {String} data.placement Placement applied to popper\n * @property {String} data.originalPlacement Placement originally defined on init\n * @property {Boolean} data.flipped True if popper has been flipped by flip modifier\n * @property {Boolean} data.hide True if the reference element is out of boundaries, useful to know when to hide the popper\n * @property {HTMLElement} data.arrowElement Node used as arrow by arrow modifier\n * @property {Object} data.styles Any CSS property defined here will be applied to the popper. It expects the JavaScript nomenclature (eg. `marginBottom`)\n * @property {Object} data.arrowStyles Any CSS property defined here will be applied to the popper arrow. It expects the JavaScript nomenclature (eg. `marginBottom`)\n * @property {Object} data.boundaries Offsets of the popper boundaries\n * @property {Object} data.offsets The measurements of popper, reference and arrow elements\n * @property {Object} data.offsets.popper `top`, `left`, `width`, `height` values\n * @property {Object} data.offsets.reference `top`, `left`, `width`, `height` values\n * @property {Object} data.offsets.arrow] `top` and `left` offsets, only one of them will be different from 0\n */\n\n/**\n * Default options provided to Popper.js constructor.<br />\n * These can be overridden using the `options` argument of Popper.js.<br />\n * To override an option, simply pass an object with the same\n * structure of the `options` object, as the 3rd argument. For example:\n * ```\n * new Popper(ref, pop, {\n *   modifiers: {\n *     preventOverflow: { enabled: false }\n *   }\n * })\n * ```\n * @type {Object}\n * @static\n * @memberof Popper\n */\nvar Defaults = {\n  /**\n   * Popper's placement.\n   * @prop {Popper.placements} placement='bottom'\n   */\n  placement: 'bottom',\n\n  /**\n   * Set this to true if you want popper to position it self in 'fixed' mode\n   * @prop {Boolean} positionFixed=false\n   */\n  positionFixed: false,\n\n  /**\n   * Whether events (resize, scroll) are initially enabled.\n   * @prop {Boolean} eventsEnabled=true\n   */\n  eventsEnabled: true,\n\n  /**\n   * Set to true if you want to automatically remove the popper when\n   * you call the `destroy` method.\n   * @prop {Boolean} removeOnDestroy=false\n   */\n  removeOnDestroy: false,\n\n  /**\n   * Callback called when the popper is created.<br />\n   * By default, it is set to no-op.<br />\n   * Access Popper.js instance with `data.instance`.\n   * @prop {onCreate}\n   */\n  onCreate: () => {},\n\n  /**\n   * Callback called when the popper is updated. This callback is not called\n   * on the initialization/creation of the popper, but only on subsequent\n   * updates.<br />\n   * By default, it is set to no-op.<br />\n   * Access Popper.js instance with `data.instance`.\n   * @prop {onUpdate}\n   */\n  onUpdate: () => {},\n\n  /**\n   * List of modifiers used to modify the offsets before they are applied to the popper.\n   * They provide most of the functionalities of Popper.js.\n   * @prop {modifiers}\n   */\n  modifiers\n};\n\n/**\n * @callback onCreate\n * @param {dataObject} data\n */\n\n/**\n * @callback onUpdate\n * @param {dataObject} data\n */\n\n// Utils\n// Methods\nclass Popper {\n  /**\n   * Creates a new Popper.js instance.\n   * @class Popper\n   * @param {Element|referenceObject} reference - The reference element used to position the popper\n   * @param {Element} popper - The HTML / XML element used as the popper\n   * @param {Object} options - Your custom options to override the ones defined in [Defaults](#defaults)\n   * @return {Object} instance - The generated Popper.js instance\n   */\n  constructor(reference, popper, options = {}) {\n    this.scheduleUpdate = () => requestAnimationFrame(this.update);\n\n    // make update() debounced, so that it only runs at most once-per-tick\n    this.update = debounce(this.update.bind(this));\n\n    // with {} we create a new object with the options inside it\n    this.options = _extends({}, Popper.Defaults, options);\n\n    // init state\n    this.state = {\n      isDestroyed: false,\n      isCreated: false,\n      scrollParents: []\n    };\n\n    // get reference and popper elements (allow jQuery wrappers)\n    this.reference = reference && reference.jquery ? reference[0] : reference;\n    this.popper = popper && popper.jquery ? popper[0] : popper;\n\n    // Deep merge modifiers options\n    this.options.modifiers = {};\n    Object.keys(_extends({}, Popper.Defaults.modifiers, options.modifiers)).forEach(name => {\n      this.options.modifiers[name] = _extends({}, Popper.Defaults.modifiers[name] || {}, options.modifiers ? options.modifiers[name] : {});\n    });\n\n    // Refactoring modifiers' list (Object => Array)\n    this.modifiers = Object.keys(this.options.modifiers).map(name => _extends({\n      name\n    }, this.options.modifiers[name]))\n    // sort the modifiers by order\n    .sort((a, b) => a.order - b.order);\n\n    // modifiers have the ability to execute arbitrary code when Popper.js get inited\n    // such code is executed in the same order of its modifier\n    // they could add new properties to their options configuration\n    // BE AWARE: don't add options to `options.modifiers.name` but to `modifierOptions`!\n    this.modifiers.forEach(modifierOptions => {\n      if (modifierOptions.enabled && isFunction(modifierOptions.onLoad)) {\n        modifierOptions.onLoad(this.reference, this.popper, this.options, modifierOptions, this.state);\n      }\n    });\n\n    // fire the first update to position the popper in the right place\n    this.update();\n\n    const eventsEnabled = this.options.eventsEnabled;\n    if (eventsEnabled) {\n      // setup event listeners, they will take care of update the position in specific situations\n      this.enableEventListeners();\n    }\n\n    this.state.eventsEnabled = eventsEnabled;\n  }\n\n  // We can't use class properties because they don't get listed in the\n  // class prototype and break stuff like Sinon stubs\n  update() {\n    return update.call(this);\n  }\n  destroy() {\n    return destroy.call(this);\n  }\n  enableEventListeners() {\n    return enableEventListeners.call(this);\n  }\n  disableEventListeners() {\n    return disableEventListeners.call(this);\n  }\n\n  /**\n   * Schedules an update. It will run on the next UI update available.\n   * @method scheduleUpdate\n   * @memberof Popper\n   */\n\n\n  /**\n   * Collection of utilities useful when writing custom modifiers.\n   * Starting from version 1.7, this method is available only if you\n   * include `popper-utils.js` before `popper.js`.\n   *\n   * **DEPRECATION**: This way to access PopperUtils is deprecated\n   * and will be removed in v2! Use the PopperUtils module directly instead.\n   * Due to the high instability of the methods contained in Utils, we can't\n   * guarantee them to follow semver. Use them at your own risk!\n   * @static\n   * @private\n   * @type {Object}\n   * @deprecated since version 1.8\n   * @member Utils\n   * @memberof Popper\n   */\n}\n\n/**\n * The `referenceObject` is an object that provides an interface compatible with Popper.js\n * and lets you use it as replacement of a real DOM node.<br />\n * You can use this method to position a popper relatively to a set of coordinates\n * in case you don't have a DOM node to use as reference.\n *\n * ```\n * new Popper(referenceObject, popperNode);\n * ```\n *\n * NB: This feature isn't supported in Internet Explorer 10.\n * @name referenceObject\n * @property {Function} data.getBoundingClientRect\n * A function that returns a set of coordinates compatible with the native `getBoundingClientRect` method.\n * @property {number} data.clientWidth\n * An ES6 getter that will return the width of the virtual reference element.\n * @property {number} data.clientHeight\n * An ES6 getter that will return the height of the virtual reference element.\n */\n\nPopper.Utils = (typeof window !== 'undefined' ? window : global).PopperUtils;\nPopper.placements = placements;\nPopper.Defaults = Defaults;\n\nexport default Popper;\n//# sourceMappingURL=popper.js.map\n","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function(\"return this\")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n"],"sourceRoot":""}